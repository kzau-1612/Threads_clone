/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StepsImport } from './routes/steps'
import { Route as SearchImport } from './routes/search'
import { Route as LayoutImport } from './routes/_layout'
import { Route as AuthLayoutImport } from './routes/_auth-layout'
import { Route as PokemonIndexImport } from './routes/pokemon/index'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as PokemonIdImport } from './routes/pokemon/$id'
import { Route as LayoutProfileImport } from './routes/_layout/profile'
import { Route as AuthLayoutLoginImport } from './routes/_auth-layout/login'

// Create/Update Routes

const StepsRoute = StepsImport.update({
  id: '/steps',
  path: '/steps',
  getParentRoute: () => rootRoute,
} as any)

const SearchRoute = SearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_auth-layout',
  getParentRoute: () => rootRoute,
} as any)

const PokemonIndexRoute = PokemonIndexImport.update({
  id: '/pokemon/',
  path: '/pokemon/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const PokemonIdRoute = PokemonIdImport.update({
  id: '/pokemon/$id',
  path: '/pokemon/$id',
  getParentRoute: () => rootRoute,
} as any)

const LayoutProfileRoute = LayoutProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthLayoutLoginRoute = AuthLayoutLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth-layout': {
      id: '/_auth-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/steps': {
      id: '/steps'
      path: '/steps'
      fullPath: '/steps'
      preLoaderRoute: typeof StepsImport
      parentRoute: typeof rootRoute
    }
    '/_auth-layout/login': {
      id: '/_auth-layout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLayoutLoginImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_layout/profile': {
      id: '/_layout/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof LayoutProfileImport
      parentRoute: typeof LayoutImport
    }
    '/pokemon/$id': {
      id: '/pokemon/$id'
      path: '/pokemon/$id'
      fullPath: '/pokemon/$id'
      preLoaderRoute: typeof PokemonIdImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/pokemon/': {
      id: '/pokemon/'
      path: '/pokemon'
      fullPath: '/pokemon'
      preLoaderRoute: typeof PokemonIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthLayoutRouteChildren {
  AuthLayoutLoginRoute: typeof AuthLayoutLoginRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutLoginRoute: AuthLayoutLoginRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface LayoutRouteChildren {
  LayoutProfileRoute: typeof LayoutProfileRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutProfileRoute: LayoutProfileRoute,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/search': typeof SearchRoute
  '/steps': typeof StepsRoute
  '/login': typeof AuthLayoutLoginRoute
  '/profile': typeof LayoutProfileRoute
  '/pokemon/$id': typeof PokemonIdRoute
  '/': typeof LayoutIndexRoute
  '/pokemon': typeof PokemonIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthLayoutRouteWithChildren
  '/search': typeof SearchRoute
  '/steps': typeof StepsRoute
  '/login': typeof AuthLayoutLoginRoute
  '/profile': typeof LayoutProfileRoute
  '/pokemon/$id': typeof PokemonIdRoute
  '/': typeof LayoutIndexRoute
  '/pokemon': typeof PokemonIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth-layout': typeof AuthLayoutRouteWithChildren
  '/_layout': typeof LayoutRouteWithChildren
  '/search': typeof SearchRoute
  '/steps': typeof StepsRoute
  '/_auth-layout/login': typeof AuthLayoutLoginRoute
  '/_layout/profile': typeof LayoutProfileRoute
  '/pokemon/$id': typeof PokemonIdRoute
  '/_layout/': typeof LayoutIndexRoute
  '/pokemon/': typeof PokemonIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/search'
    | '/steps'
    | '/login'
    | '/profile'
    | '/pokemon/$id'
    | '/'
    | '/pokemon'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/search'
    | '/steps'
    | '/login'
    | '/profile'
    | '/pokemon/$id'
    | '/'
    | '/pokemon'
  id:
    | '__root__'
    | '/_auth-layout'
    | '/_layout'
    | '/search'
    | '/steps'
    | '/_auth-layout/login'
    | '/_layout/profile'
    | '/pokemon/$id'
    | '/_layout/'
    | '/pokemon/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
  SearchRoute: typeof SearchRoute
  StepsRoute: typeof StepsRoute
  PokemonIdRoute: typeof PokemonIdRoute
  PokemonIndexRoute: typeof PokemonIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
  SearchRoute: SearchRoute,
  StepsRoute: StepsRoute,
  PokemonIdRoute: PokemonIdRoute,
  PokemonIndexRoute: PokemonIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth-layout",
        "/_layout",
        "/search",
        "/steps",
        "/pokemon/$id",
        "/pokemon/"
      ]
    },
    "/_auth-layout": {
      "filePath": "_auth-layout.tsx",
      "children": [
        "/_auth-layout/login"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/profile",
        "/_layout/"
      ]
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/steps": {
      "filePath": "steps.tsx"
    },
    "/_auth-layout/login": {
      "filePath": "_auth-layout/login.tsx",
      "parent": "/_auth-layout"
    },
    "/_layout/profile": {
      "filePath": "_layout/profile.tsx",
      "parent": "/_layout"
    },
    "/pokemon/$id": {
      "filePath": "pokemon/$id.tsx"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/pokemon/": {
      "filePath": "pokemon/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as SearchImport } from "./routes/search";
import { Route as ProfileImport } from "./routes/profile";
import { Route as LoginImport } from "./routes/login";
import { Route as AuthenticatedImport } from "./routes/_authenticated";
import { Route as IndexImport } from "./routes/index";
import { Route as PokemonIndexImport } from "./routes/pokemon/index";
import { Route as PokemonIdImport } from "./routes/pokemon/$id";
import { Route as HiddenLayoutImport } from "./routes/_layout";
import { Route as AuthenticatedSettingsImport } from "./routes/_authenticated/settings";
import { Route as AuthenticatedDashboardImport } from "./routes/_authenticated/dashboard";
import { Route as HiddenLayoutFooImport } from "./routes/_layout/foo";
import { Route as HiddenLayoutBarImport } from "./routes/_layout/bar";

// Create/Update Routes

const SearchRoute = SearchImport.update({
  id: "/search",
  path: "/search",
  getParentRoute: () => rootRoute,
} as any);

const ProfileRoute = ProfileImport.update({
  id: "/profile",
  path: "/profile",
  getParentRoute: () => rootRoute,
} as any);

const LoginRoute = LoginImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => rootRoute,
} as any);

const AuthenticatedRoute = AuthenticatedImport.update({
  id: "/_authenticated",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const PokemonIndexRoute = PokemonIndexImport.update({
  id: "/pokemon/",
  path: "/pokemon/",
  getParentRoute: () => rootRoute,
} as any);

const PokemonIdRoute = PokemonIdImport.update({
  id: "/pokemon/$id",
  path: "/pokemon/$id",
  getParentRoute: () => rootRoute,
} as any);

const HiddenLayoutRoute = HiddenLayoutImport.update({
  id: "/_hidden/_layout",
  getParentRoute: () => rootRoute,
} as any);

const AuthenticatedSettingsRoute = AuthenticatedSettingsImport.update({
  id: "/settings",
  path: "/settings",
  getParentRoute: () => AuthenticatedRoute,
} as any);

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: "/dashboard",
  path: "/dashboard",
  getParentRoute: () => AuthenticatedRoute,
} as any);

const HiddenLayoutFooRoute = HiddenLayoutFooImport.update({
  id: "/foo",
  path: "/foo",
  getParentRoute: () => HiddenLayoutRoute,
} as any);

const HiddenLayoutBarRoute = HiddenLayoutBarImport.update({
  id: "/bar",
  path: "/bar",
  getParentRoute: () => HiddenLayoutRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/_authenticated": {
      id: "/_authenticated";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AuthenticatedImport;
      parentRoute: typeof rootRoute;
    };
    "/login": {
      id: "/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginImport;
      parentRoute: typeof rootRoute;
    };
    "/profile": {
      id: "/profile";
      path: "/profile";
      fullPath: "/profile";
      preLoaderRoute: typeof ProfileImport;
      parentRoute: typeof rootRoute;
    };
    "/search": {
      id: "/search";
      path: "/search";
      fullPath: "/search";
      preLoaderRoute: typeof SearchImport;
      parentRoute: typeof rootRoute;
    };
    "/_authenticated/dashboard": {
      id: "/_authenticated/dashboard";
      path: "/dashboard";
      fullPath: "/dashboard";
      preLoaderRoute: typeof AuthenticatedDashboardImport;
      parentRoute: typeof AuthenticatedImport;
    };
    "/_authenticated/settings": {
      id: "/_authenticated/settings";
      path: "/settings";
      fullPath: "/settings";
      preLoaderRoute: typeof AuthenticatedSettingsImport;
      parentRoute: typeof AuthenticatedImport;
    };
    "/_hidden/_layout": {
      id: "/_hidden/_layout";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof HiddenLayoutImport;
      parentRoute: typeof rootRoute;
    };
    "/pokemon/$id": {
      id: "/pokemon/$id";
      path: "/pokemon/$id";
      fullPath: "/pokemon/$id";
      preLoaderRoute: typeof PokemonIdImport;
      parentRoute: typeof rootRoute;
    };
    "/pokemon/": {
      id: "/pokemon/";
      path: "/pokemon";
      fullPath: "/pokemon";
      preLoaderRoute: typeof PokemonIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/_hidden/_layout/bar": {
      id: "/_hidden/_layout/bar";
      path: "/bar";
      fullPath: "/bar";
      preLoaderRoute: typeof HiddenLayoutBarImport;
      parentRoute: typeof HiddenLayoutImport;
    };
    "/_hidden/_layout/foo": {
      id: "/_hidden/_layout/foo";
      path: "/foo";
      fullPath: "/foo";
      preLoaderRoute: typeof HiddenLayoutFooImport;
      parentRoute: typeof HiddenLayoutImport;
    };
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute;
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRoute;
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRoute,
};

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren
);

interface HiddenLayoutRouteChildren {
  HiddenLayoutBarRoute: typeof HiddenLayoutBarRoute;
  HiddenLayoutFooRoute: typeof HiddenLayoutFooRoute;
}

const HiddenLayoutRouteChildren: HiddenLayoutRouteChildren = {
  HiddenLayoutBarRoute: HiddenLayoutBarRoute,
  HiddenLayoutFooRoute: HiddenLayoutFooRoute,
};

const HiddenLayoutRouteWithChildren = HiddenLayoutRoute._addFileChildren(HiddenLayoutRouteChildren);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "": typeof HiddenLayoutRouteWithChildren;
  "/login": typeof LoginRoute;
  "/profile": typeof ProfileRoute;
  "/search": typeof SearchRoute;
  "/dashboard": typeof AuthenticatedDashboardRoute;
  "/settings": typeof AuthenticatedSettingsRoute;
  "/pokemon/$id": typeof PokemonIdRoute;
  "/pokemon": typeof PokemonIndexRoute;
  "/bar": typeof HiddenLayoutBarRoute;
  "/foo": typeof HiddenLayoutFooRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "": typeof HiddenLayoutRouteWithChildren;
  "/login": typeof LoginRoute;
  "/profile": typeof ProfileRoute;
  "/search": typeof SearchRoute;
  "/dashboard": typeof AuthenticatedDashboardRoute;
  "/settings": typeof AuthenticatedSettingsRoute;
  "/pokemon/$id": typeof PokemonIdRoute;
  "/pokemon": typeof PokemonIndexRoute;
  "/bar": typeof HiddenLayoutBarRoute;
  "/foo": typeof HiddenLayoutFooRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/_authenticated": typeof AuthenticatedRouteWithChildren;
  "/login": typeof LoginRoute;
  "/profile": typeof ProfileRoute;
  "/search": typeof SearchRoute;
  "/_authenticated/dashboard": typeof AuthenticatedDashboardRoute;
  "/_authenticated/settings": typeof AuthenticatedSettingsRoute;
  "/_hidden/_layout": typeof HiddenLayoutRouteWithChildren;
  "/pokemon/$id": typeof PokemonIdRoute;
  "/pokemon/": typeof PokemonIndexRoute;
  "/_hidden/_layout/bar": typeof HiddenLayoutBarRoute;
  "/_hidden/_layout/foo": typeof HiddenLayoutFooRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | ""
    | "/login"
    | "/profile"
    | "/search"
    | "/dashboard"
    | "/settings"
    | "/pokemon/$id"
    | "/pokemon"
    | "/bar"
    | "/foo";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | ""
    | "/login"
    | "/profile"
    | "/search"
    | "/dashboard"
    | "/settings"
    | "/pokemon/$id"
    | "/pokemon"
    | "/bar"
    | "/foo";
  id:
    | "__root__"
    | "/"
    | "/_authenticated"
    | "/login"
    | "/profile"
    | "/search"
    | "/_authenticated/dashboard"
    | "/_authenticated/settings"
    | "/_hidden/_layout"
    | "/pokemon/$id"
    | "/pokemon/"
    | "/_hidden/_layout/bar"
    | "/_hidden/_layout/foo";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren;
  LoginRoute: typeof LoginRoute;
  ProfileRoute: typeof ProfileRoute;
  SearchRoute: typeof SearchRoute;
  HiddenLayoutRoute: typeof HiddenLayoutRouteWithChildren;
  PokemonIdRoute: typeof PokemonIdRoute;
  PokemonIndexRoute: typeof PokemonIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  SearchRoute: SearchRoute,
  HiddenLayoutRoute: HiddenLayoutRouteWithChildren,
  PokemonIdRoute: PokemonIdRoute,
  PokemonIndexRoute: PokemonIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/login",
        "/profile",
        "/search",
        "/_hidden/_layout",
        "/pokemon/$id",
        "/pokemon/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/dashboard",
        "/_authenticated/settings"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings.tsx",
      "parent": "/_authenticated"
    },
    "/_hidden/_layout": {
      "filePath": "_hidden/_layout.tsx",
      "children": [
        "/_hidden/_layout/bar",
        "/_hidden/_layout/foo"
      ]
    },
    "/pokemon/$id": {
      "filePath": "pokemon/$id.tsx"
    },
    "/pokemon/": {
      "filePath": "pokemon/index.tsx"
    },
    "/_hidden/_layout/bar": {
      "filePath": "_hidden/_layout/bar.tsx",
      "parent": "/_hidden/_layout"
    },
    "/_hidden/_layout/foo": {
      "filePath": "_hidden/_layout/foo.tsx",
      "parent": "/_hidden/_layout"
    }
  }
}
ROUTE_MANIFEST_END */

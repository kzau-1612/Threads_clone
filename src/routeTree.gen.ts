/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StepsImport } from './routes/steps'
import { Route as SearchImport } from './routes/search'
import { Route as PokemonIndexImport } from './routes/pokemon/index'
import { Route as PokemonIdImport } from './routes/pokemon/$id'
import { Route as layoutLayoutImport } from './routes/(layout)/_layout'
import { Route as authLayoutAuthLayoutImport } from './routes/(auth-layout)/_auth-layout'
import { Route as layoutLayoutIndexImport } from './routes/(layout)/_layout/index'
import { Route as layoutLayoutProfileImport } from './routes/(layout)/_layout/profile'
import { Route as authLayoutAuthLayoutloginLoginImport } from './routes/(auth-layout)/_auth-layout/(login)/login'

// Create Virtual Routes

const layoutImport = createFileRoute('/(layout)')()
const authLayoutImport = createFileRoute('/(auth-layout)')()

// Create/Update Routes

const layoutRoute = layoutImport.update({
  id: '/(layout)',
  getParentRoute: () => rootRoute,
} as any)

const authLayoutRoute = authLayoutImport.update({
  id: '/(auth-layout)',
  getParentRoute: () => rootRoute,
} as any)

const StepsRoute = StepsImport.update({
  id: '/steps',
  path: '/steps',
  getParentRoute: () => rootRoute,
} as any)

const SearchRoute = SearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const PokemonIndexRoute = PokemonIndexImport.update({
  id: '/pokemon/',
  path: '/pokemon/',
  getParentRoute: () => rootRoute,
} as any)

const PokemonIdRoute = PokemonIdImport.update({
  id: '/pokemon/$id',
  path: '/pokemon/$id',
  getParentRoute: () => rootRoute,
} as any)

const layoutLayoutRoute = layoutLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => layoutRoute,
} as any)

const authLayoutAuthLayoutRoute = authLayoutAuthLayoutImport.update({
  id: '/_auth-layout',
  getParentRoute: () => authLayoutRoute,
} as any)

const layoutLayoutIndexRoute = layoutLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => layoutLayoutRoute,
} as any)

const layoutLayoutProfileRoute = layoutLayoutProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => layoutLayoutRoute,
} as any)

const authLayoutAuthLayoutloginLoginRoute =
  authLayoutAuthLayoutloginLoginImport.update({
    id: '/(login)/login',
    path: '/login',
    getParentRoute: () => authLayoutAuthLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/steps': {
      id: '/steps'
      path: '/steps'
      fullPath: '/steps'
      preLoaderRoute: typeof StepsImport
      parentRoute: typeof rootRoute
    }
    '/(auth-layout)': {
      id: '/(auth-layout)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutImport
      parentRoute: typeof rootRoute
    }
    '/(auth-layout)/_auth-layout': {
      id: '/(auth-layout)/_auth-layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutAuthLayoutImport
      parentRoute: typeof authLayoutRoute
    }
    '/(layout)': {
      id: '/(layout)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof layoutImport
      parentRoute: typeof rootRoute
    }
    '/(layout)/_layout': {
      id: '/(layout)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof layoutLayoutImport
      parentRoute: typeof layoutRoute
    }
    '/pokemon/$id': {
      id: '/pokemon/$id'
      path: '/pokemon/$id'
      fullPath: '/pokemon/$id'
      preLoaderRoute: typeof PokemonIdImport
      parentRoute: typeof rootRoute
    }
    '/pokemon/': {
      id: '/pokemon/'
      path: '/pokemon'
      fullPath: '/pokemon'
      preLoaderRoute: typeof PokemonIndexImport
      parentRoute: typeof rootRoute
    }
    '/(layout)/_layout/profile': {
      id: '/(layout)/_layout/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof layoutLayoutProfileImport
      parentRoute: typeof layoutLayoutImport
    }
    '/(layout)/_layout/': {
      id: '/(layout)/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof layoutLayoutIndexImport
      parentRoute: typeof layoutLayoutImport
    }
    '/(auth-layout)/_auth-layout/(login)/login': {
      id: '/(auth-layout)/_auth-layout/(login)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLayoutAuthLayoutloginLoginImport
      parentRoute: typeof authLayoutAuthLayoutImport
    }
  }
}

// Create and export the route tree

interface authLayoutAuthLayoutRouteChildren {
  authLayoutAuthLayoutloginLoginRoute: typeof authLayoutAuthLayoutloginLoginRoute
}

const authLayoutAuthLayoutRouteChildren: authLayoutAuthLayoutRouteChildren = {
  authLayoutAuthLayoutloginLoginRoute: authLayoutAuthLayoutloginLoginRoute,
}

const authLayoutAuthLayoutRouteWithChildren =
  authLayoutAuthLayoutRoute._addFileChildren(authLayoutAuthLayoutRouteChildren)

interface authLayoutRouteChildren {
  authLayoutAuthLayoutRoute: typeof authLayoutAuthLayoutRouteWithChildren
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authLayoutAuthLayoutRoute: authLayoutAuthLayoutRouteWithChildren,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

interface layoutLayoutRouteChildren {
  layoutLayoutProfileRoute: typeof layoutLayoutProfileRoute
  layoutLayoutIndexRoute: typeof layoutLayoutIndexRoute
}

const layoutLayoutRouteChildren: layoutLayoutRouteChildren = {
  layoutLayoutProfileRoute: layoutLayoutProfileRoute,
  layoutLayoutIndexRoute: layoutLayoutIndexRoute,
}

const layoutLayoutRouteWithChildren = layoutLayoutRoute._addFileChildren(
  layoutLayoutRouteChildren,
)

interface layoutRouteChildren {
  layoutLayoutRoute: typeof layoutLayoutRouteWithChildren
}

const layoutRouteChildren: layoutRouteChildren = {
  layoutLayoutRoute: layoutLayoutRouteWithChildren,
}

const layoutRouteWithChildren =
  layoutRoute._addFileChildren(layoutRouteChildren)

export interface FileRoutesByFullPath {
  '/search': typeof SearchRoute
  '/steps': typeof StepsRoute
  '/': typeof layoutLayoutIndexRoute
  '/pokemon/$id': typeof PokemonIdRoute
  '/pokemon': typeof PokemonIndexRoute
  '/profile': typeof layoutLayoutProfileRoute
  '/login': typeof authLayoutAuthLayoutloginLoginRoute
}

export interface FileRoutesByTo {
  '/search': typeof SearchRoute
  '/steps': typeof StepsRoute
  '/': typeof layoutLayoutIndexRoute
  '/pokemon/$id': typeof PokemonIdRoute
  '/pokemon': typeof PokemonIndexRoute
  '/profile': typeof layoutLayoutProfileRoute
  '/login': typeof authLayoutAuthLayoutloginLoginRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/search': typeof SearchRoute
  '/steps': typeof StepsRoute
  '/(auth-layout)': typeof authLayoutRouteWithChildren
  '/(auth-layout)/_auth-layout': typeof authLayoutAuthLayoutRouteWithChildren
  '/(layout)': typeof layoutRouteWithChildren
  '/(layout)/_layout': typeof layoutLayoutRouteWithChildren
  '/pokemon/$id': typeof PokemonIdRoute
  '/pokemon/': typeof PokemonIndexRoute
  '/(layout)/_layout/profile': typeof layoutLayoutProfileRoute
  '/(layout)/_layout/': typeof layoutLayoutIndexRoute
  '/(auth-layout)/_auth-layout/(login)/login': typeof authLayoutAuthLayoutloginLoginRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/search'
    | '/steps'
    | '/'
    | '/pokemon/$id'
    | '/pokemon'
    | '/profile'
    | '/login'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/search'
    | '/steps'
    | '/'
    | '/pokemon/$id'
    | '/pokemon'
    | '/profile'
    | '/login'
  id:
    | '__root__'
    | '/search'
    | '/steps'
    | '/(auth-layout)'
    | '/(auth-layout)/_auth-layout'
    | '/(layout)'
    | '/(layout)/_layout'
    | '/pokemon/$id'
    | '/pokemon/'
    | '/(layout)/_layout/profile'
    | '/(layout)/_layout/'
    | '/(auth-layout)/_auth-layout/(login)/login'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  SearchRoute: typeof SearchRoute
  StepsRoute: typeof StepsRoute
  authLayoutRoute: typeof authLayoutRouteWithChildren
  layoutRoute: typeof layoutRouteWithChildren
  PokemonIdRoute: typeof PokemonIdRoute
  PokemonIndexRoute: typeof PokemonIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  SearchRoute: SearchRoute,
  StepsRoute: StepsRoute,
  authLayoutRoute: authLayoutRouteWithChildren,
  layoutRoute: layoutRouteWithChildren,
  PokemonIdRoute: PokemonIdRoute,
  PokemonIndexRoute: PokemonIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/search",
        "/steps",
        "/(auth-layout)",
        "/(layout)",
        "/pokemon/$id",
        "/pokemon/"
      ]
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/steps": {
      "filePath": "steps.tsx"
    },
    "/(auth-layout)": {
      "filePath": "(auth-layout)",
      "children": [
        "/(auth-layout)/_auth-layout"
      ]
    },
    "/(auth-layout)/_auth-layout": {
      "filePath": "(auth-layout)/_auth-layout.tsx",
      "parent": "/(auth-layout)",
      "children": [
        "/(auth-layout)/_auth-layout/(login)/login"
      ]
    },
    "/(layout)": {
      "filePath": "(layout)",
      "children": [
        "/(layout)/_layout"
      ]
    },
    "/(layout)/_layout": {
      "filePath": "(layout)/_layout.tsx",
      "parent": "/(layout)",
      "children": [
        "/(layout)/_layout/profile",
        "/(layout)/_layout/"
      ]
    },
    "/pokemon/$id": {
      "filePath": "pokemon/$id.tsx"
    },
    "/pokemon/": {
      "filePath": "pokemon/index.tsx"
    },
    "/(layout)/_layout/profile": {
      "filePath": "(layout)/_layout/profile.tsx",
      "parent": "/(layout)/_layout"
    },
    "/(layout)/_layout/": {
      "filePath": "(layout)/_layout/index.tsx",
      "parent": "/(layout)/_layout"
    },
    "/(auth-layout)/_auth-layout/(login)/login": {
      "filePath": "(auth-layout)/_auth-layout/(login)/login.tsx",
      "parent": "/(auth-layout)/_auth-layout"
    }
  }
}
ROUTE_MANIFEST_END */
